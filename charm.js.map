{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3a2c1298007ef952fa89","webpack:///./src/pixijs-charm.ts","webpack:///external \"pixi.js\"","webpack:///external \"es6-shim\""],"names":[],"mappings":"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","file":"pixijs-charm.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"pixi.js\"), require(\"es6-shim\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pixijs-charm\", [\"pixi.js\", \"es6-shim\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pixijs-charm\"] = factory(require(\"pixi.js\"), require(\"es6-shim\"));\n\telse\n\t\troot[\"pixijs-charm\"] = factory(root[\"pixi.js\"], root[\"es6-shim\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3a2c1298007ef952fa89","import \"pixi.js\";\r\nimport \"es6-shim\";\r\n\r\n/* tslint:disable max-line-length */\r\n\r\n/**\r\n *\r\n */\r\nexport interface ICharm {\r\n\r\n    /**\r\n     *\r\n     * @param renderingEngine\r\n     */\r\n    // new(renderingEngine: any): ICharm;\r\n\r\n    /**\r\n     * The low level `tweenProperty` function is used as the foundation\r\n     * for the the higher level tween methods.\r\n     * @param tweenProperties Tween properties object\r\n     * @return Tween object\r\n     */\r\n    tweenProperty(tweenProperties: ICharm.Tween.ITweenProperty): ICharm.Tween.ITween;\r\n\r\n    /**\r\n     * `makeTween` is a general low-level method for making complex tweens\r\n     * out of multiple `tweenProperty` functions. Its one argument.\r\n     * @param tweensToAdd array containing multiple 'Charm.Tween.ITween' for 'tweenProperty' calls\r\n     * @return Tween collection created\r\n     */\r\n    makeTween(tweensToAdd: ICharm.Tween.ITween[]): ICharm.Tween.ITweenCollection;\r\n\r\n\r\n    /** SIMPLE TWEENS */\r\n\r\n    /**\r\n     * `fadeOut`\r\n     * @param displayObject\r\n     * @param frames (default 60)\r\n     * @return\r\n     */\r\n    fadeOut(displayObject: PIXI.DisplayObject, frames?: number): ICharm.Tween.ITween;\r\n\r\n    /**\r\n     * `fadeIn`\r\n     * @param displayObject\r\n     * @param frames (default 60)\r\n     * @return\r\n     */\r\n    fadeIn(displayObject: PIXI.DisplayObject, frames?: number): ICharm.Tween.ITween;\r\n\r\n    /**\r\n     * `pulse`\r\n     * Fades the displayObject in and out at a steady rate.\r\n     * Set the `minAlpha` to something greater than 0 if you\r\n     * don't want the displayObject to fade away completely\r\n     * @param displayObject\r\n     * @param frames (default 60)\r\n     * @param minAlpha (default 0)\r\n     * @return\r\n     */\r\n    pulse(displayObject: PIXI.DisplayObject, frames?: number, minAlpha?: number): ICharm.Tween.ITween;\r\n\r\n\r\n\r\n    /** COMPLEX TWEENS */\r\n\r\n    /**\r\n     * Complex tweens\r\n     * @param displayObject\r\n     * @param endX\r\n     * @param endY\r\n     * @param frames (default 60)\r\n     * @param type (default smoothstep)\r\n     * @param yoyo (default false)\r\n     * @param delayBeforeRepeat (default 0)\r\n     * @return\r\n     */\r\n    slide(displayObject: PIXI.DisplayObject, endX: number, endY: number, frames?: number, type?: string, yoyo?: boolean, delayBeforeRepeat?: number): ICharm.Tween.ITweenCollection;\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param endScaleX (default 0.8)\r\n     * @param endScaleY (default 0.8)\r\n     * @param frames (default 60)\r\n     * @param yoyo (default true)\r\n     * @param delayBeforeRepeat (default 0)\r\n     * @return\r\n     */\r\n    breathe(displayObject: PIXI.DisplayObject, endScaleX?: number, endScaleY?: number, frames?: number, yoyo?: boolean, delayBeforeRepeat?: number): ICharm.Tween.ITweenCollection;\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param endScaleX (default 0.5)\r\n     * @param endScaleY (default 0.5)\r\n     * @param frames (default 60)\r\n     * @return\r\n     */\r\n    scale(displayObject: PIXI.DisplayObject, endScaleX?: number, endScaleY?: number, frames?: number): ICharm.Tween.ITweenCollection;\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param scaleFactor (default 1.3)\r\n     * @param startMagnitude (default 10)\r\n     * @param endMagnitude (default 20)\r\n     * @param frames (default 10)\r\n     * @param yoyo (default true)\r\n     * @param delayBeforeRepeat (default 0)\r\n     * @return\r\n     */\r\n    strobe(displayObject: PIXI.DisplayObject, scaleFactor?: number, startMagnitude?: number, endMagnitude?: number, frames?: number, yoyo?: boolean, delayBeforeRepeat?: number): ICharm.Tween.ITweenCollection;\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param scaleFactorX (default 1.2)\r\n     * @param scaleFactorY (default 1.2)\r\n     * @param frames (default 10)\r\n     * @param xStartMagnitude (default 10)\r\n     * @param xEndMagnitude (default 10)\r\n     * @param yStartMagnitude (default -10)\r\n     * @param yEndMagnitude (default -10)\r\n     * @param friction (default 0.98)\r\n     * @param yoyo (default true)\r\n     * @param delayBeforeRepeat (default 0)\r\n     * @return\r\n     */\r\n    wobble(displayObject: PIXI.DisplayObject, scaleFactorX?: number, scaleFactorY?: number, frames?: number, xStartMagnitude?: number, xEndMagnitude?: number, yStartMagnitude?: number, yEndMagnitude?: number, friction?: number, yoyo?: boolean, delayBeforeRepeat?: number): ICharm.Tween.ITweenCollection;\r\n\r\n\r\n\r\n    /** MOTION PATH TWEENS */\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param pointsArray Bezier curve as a 2D array of 4 x/y points\r\n     * @param totalFrames\r\n     * @param type (default 'smoothstep')\r\n     * @param yoyo (default false)\r\n     * @param delayBeforeRepeat (default 0)\r\n     * @return\r\n     */\r\n    followCurve(displayObject: PIXI.DisplayObject, pointsArray: number[][], totalFrames: number, type?: string, yoyo?: boolean, delayBeforeRepeat?: number): ICharm.Tween.ITween;\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param originalPath Array of 2D array of x/y position waypoints that map out the path you want to follow.\r\n     * @param totalFrames The duration, in frames (default 300)\r\n     * @param type The easing type (default 'smoothstep')\r\n     * @param loop Should the animation loop? (default false)\r\n     * @param yoyo Shoud the direction reverse? (default false)\r\n     * @param delayBetweenSections Delay, in milliseconds, between sections (default 0)\r\n     * @return\r\n     */\r\n    walkPath(displayObject: PIXI.DisplayObject, originalPathArray: number[][], totalFrames?: number, type?: string, loop?: boolean, yoyo?: boolean, delayBetweenSections?: number): ICharm.Tween.ITweenCollection;\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param curvedWaypoints 2D array of Bezier curves (Bezier curves is a 2D array of 4 x/y points)\r\n     * @param totalFrames (default 300)\r\n     * @param type (default 'smoothstep')\r\n     * @param loop (default false)\r\n     * @param yoyo (default false)\r\n     * @param delayBeforeContinue (default 0)\r\n     * @return\r\n     */\r\n    walkCurve(displayObject: PIXI.DisplayObject, curvedWaypoints: number[][][], totalFrames?: number, type?: string, loop?: boolean, yoyo?: boolean, delayBeforeContinue?: number): ICharm.Tween.ITween;\r\n\r\n    /**\r\n     * The `wait` method lets you set up a timed sequence of events\r\n     *\r\n     *   wait(1000)\r\n     *     .then(() => console.log(\"One\"))\r\n     *     .then(() => wait(1000))\r\n     *     .then(() => console.log(\"Two\"))\r\n     *     .then(() => wait(1000))\r\n     *     .then(() => console.log(\"Three\"))\r\n     * @param duration\r\n     * @return\r\n     */\r\n    wait(duration: number): any;\r\n\r\n    /**\r\n     * A utility to remove tweens from globalTweens\r\n     * @param tweenObject\r\n     */\r\n    removeTween(tweenObject: ICharm.Tween.ITween | ICharm.Tween.ITweenCollection): void;\r\n\r\n    /**\r\n     * Update all the tween objects in the `globalTweens` array\r\n     */\r\n    update(): void;\r\n}\r\n\r\n\r\nexport namespace ICharm.Tween {\r\n\r\n    export interface ITweenProperty {\r\n        displayObject: PIXI.DisplayObject;\r\n        property: string;\r\n        startValue: number;\r\n        endValue: number;\r\n        totalFrames: number;\r\n        type?: string;\r\n        yoyo?: boolean;\r\n        delayBeforeRepeat?: number;\r\n    }\r\n\r\n    export interface ITween extends ITweenProperty {\r\n\r\n        /**\r\n         *\r\n         */\r\n        pointsArray: number[][];\r\n\r\n        /**\r\n         *\r\n         */\r\n        startMagnitude: number;\r\n\r\n        /**\r\n         *\r\n         */\r\n        endMagnitude: number;\r\n\r\n        /**\r\n         * Set `playing` to `false`\r\n         */\r\n        playing: boolean;\r\n\r\n        /**\r\n         *\r\n         */\r\n        frameCounter: number;\r\n\r\n        /**\r\n         * The `update` method will be called on each frame by the game loop.\r\n         * This is what makes the tween move\r\n         */\r\n        update: Function;\r\n\r\n        /**\r\n         * The `end` method will be called when the tween is finished\r\n         */\r\n        end: Function;\r\n\r\n        /**\r\n         *\r\n         */\r\n        onCompleted: Function;\r\n\r\n        /**\r\n         * Use `o.start` to make a new tween using the current\r\n         * end point values\r\n         * @param startValue\r\n         * @param endValue\r\n         */\r\n        start(startValue: number | number[][], endValue?: number): void;\r\n\r\n        /**\r\n         * Pause and play methods\r\n         * @return\r\n         */\r\n        play(): void;\r\n\r\n        /**\r\n         *\r\n         * @return\r\n         */\r\n        pause(): void;\r\n    }\r\n\r\n    /**\r\n     * Interface to manage the tweens\r\n     */\r\n    export interface ITweenCollection {\r\n\r\n        /**\r\n         * Create a `tweens` array to store the new tweens\r\n         */\r\n        tweens: ITween[];\r\n\r\n        /**\r\n         * this method will be called on complete all tweens\r\n         */\r\n        onCompleted: Function;\r\n\r\n        /**\r\n         * play method to control all the tweens\r\n         */\r\n        pause(): void;\r\n\r\n        /**\r\n         * Play method to control all the tweens\r\n         */\r\n        play(): void;\r\n    }\r\n\r\n}\r\n\r\n/* tslint:enable max-line-length */\r\n\r\n\r\n\r\nexport class Charm implements ICharm {\r\n\r\n    private renderer: string;\r\n    private globalTweens: ICharm.Tween.ITween[];\r\n    private easingFormulas: any;\r\n\r\n    constructor(renderingEngine: any = PIXI) {\r\n\r\n        if (renderingEngine === undefined) { throw new Error(\"Please assign a rendering engine in the constructor before using charm.js\"); }\r\n\r\n        // Find out which rendering engine is being used (the default is Pixi)\r\n        this.renderer = \"\";\r\n\r\n        // If the 'renderingEngine' is Pixi, set up Pixi object aliases\r\n        if (renderingEngine.particles.ParticleContainer && renderingEngine.Sprite) {\r\n            this.renderer = \"pixi\";\r\n        }\r\n\r\n\r\n        // An array to store the global tweens\r\n        this.globalTweens = [];\r\n\r\n        // An object that stores all the easing formulas\r\n        this.easingFormulas = {\r\n\r\n            // Linear\r\n            linear(x: number): number {\r\n                return x;\r\n            },\r\n\r\n            // Smoothstep\r\n            smoothstep(x: number): number {\r\n                return x * x * (3 - 2 * x);\r\n            },\r\n            smoothstepSquared(x: number): number {\r\n                return Math.pow((x * x * (3 - 2 * x)), 2);\r\n            },\r\n            smoothstepCubed(x: number): number {\r\n                return Math.pow((x * x * (3 - 2 * x)), 3);\r\n            },\r\n\r\n            // Acceleration\r\n            acceleration(x: number): number {\r\n                return x * x;\r\n            },\r\n            accelerationCubed(x: number): number {\r\n                return Math.pow(x * x, 3);\r\n            },\r\n\r\n            // Deceleration\r\n            deceleration(x: number): number {\r\n                return 1 - Math.pow(1 - x, 2);\r\n            },\r\n            decelerationCubed(x: number): number {\r\n                return 1 - Math.pow(1 - x, 3);\r\n            },\r\n\r\n            // Sine\r\n            sine(x: number): number {\r\n                return Math.sin(x * Math.PI / 2);\r\n            },\r\n            sineSquared(x: number): number {\r\n                return Math.pow(Math.sin(x * Math.PI / 2), 2);\r\n            },\r\n            sineCubed(x: number): number {\r\n                return Math.pow(Math.sin(x * Math.PI / 2), 2);\r\n            },\r\n            inverseSine(x: number): number {\r\n                return 1 - Math.sin((1 - x) * Math.PI / 2);\r\n            },\r\n            inverseSineSquared(x: number): number {\r\n                return 1 - Math.pow(Math.sin((1 - x) * Math.PI / 2), 2);\r\n            },\r\n            inverseSineCubed(x: number): number {\r\n                return 1 - Math.pow(Math.sin((1 - x) * Math.PI / 2), 3);\r\n            },\r\n\r\n            // Spline\r\n            spline(t: number, p0: number, p1: number, p2: number, p3: number): number {\r\n                return 0.5 * (\r\n                    (2 * p1) +\r\n                    (-p0 + p2) * t +\r\n                    (2 * p0 - 5 * p1 + 4 * p2 - p3) * t * t +\r\n                    (-p0 + 3 * p1 - 3 * p2 + p3) * t * t * t\r\n                );\r\n            },\r\n\r\n            // Bezier curve\r\n            cubicBezier(t: number, a: number, b: number, c: number, d: number): number {\r\n                let t2: number = t * t;\r\n                let t3: number = t2 * t;\r\n                return a + (-a * 3 + t * (3 * a - a * t)) * t + (3 * b + t * (-6 * b + b * 3 * t)) * t + (c * 3 - c * 3 * t) * t2 + d * t3;\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    /**\r\n     * The low level `tweenProperty` function is used as the foundation\r\n     * for the the higher level tween methods.\r\n     * @param tweenProperties Tween properties object\r\n     * @return Tween object\r\n     */\r\n    public tweenProperty(tweenProperties: ICharm.Tween.ITweenProperty): ICharm.Tween.ITween {\r\n\r\n        tweenProperties.type = tweenProperties.type == undefined ? \"smoothstep\" : tweenProperties.type;\r\n        tweenProperties.yoyo = tweenProperties.yoyo == undefined ? false : tweenProperties.yoyo;\r\n        tweenProperties.delayBeforeRepeat = tweenProperties.delayBeforeRepeat == undefined ? 0 : tweenProperties.delayBeforeRepeat;\r\n\r\n        // Create the tween object\r\n        let o: ICharm.Tween.ITween = {} as ICharm.Tween.ITween;\r\n\r\n        // If the tween is a bounce type (a spline), set the\r\n        // start and end magnitude values\r\n        let typeArray: string[] = tweenProperties.type.split(\" \");\r\n        if (typeArray[0] === \"bounce\") {\r\n            o.startMagnitude = parseInt(typeArray[1], 10);\r\n            o.endMagnitude = parseInt(typeArray[2], 10);\r\n        }\r\n\r\n        // Use `o.start` to make a new tween using the current\r\n        // end point values\r\n        o.start = (startValue: any, endValue: any) => {\r\n\r\n            // Clone the start and end values so that any possible references to sprite\r\n            // properties are converted to ordinary numbers\r\n            o.startValue = JSON.parse(JSON.stringify(startValue));\r\n            o.endValue = JSON.parse(JSON.stringify(endValue));\r\n            o.playing = true;\r\n            o.totalFrames = tweenProperties.totalFrames;\r\n            o.frameCounter = 0;\r\n\r\n            // Add the tween to the global `tweens` array. The `tweens` array is\r\n            // updated on each frame\r\n            this.globalTweens.push(o);\r\n        };\r\n\r\n        // Call `o.start` to start the tween\r\n        o.start(tweenProperties.startValue, tweenProperties.endValue);\r\n\r\n        // The `update` method will be called on each frame by the game loop.\r\n        // This is what makes the tween move\r\n        o.update = () => {\r\n\r\n            let curvedTime: number;\r\n\r\n            if (o.playing) {\r\n\r\n                // If the elapsed frames are less than the total frames,\r\n                // use the tweening formulas to move the sprite\r\n                if (o.frameCounter < o.totalFrames) {\r\n\r\n                    // Find the normalized value\r\n                    let normalizedTime: number = o.frameCounter / o.totalFrames;\r\n\r\n                    // Select the correct easing function from the\r\n                    // `ease` object’s library of easing functions\r\n\r\n\r\n                    // If it's not a spline, use one of the ordinary easing functions\r\n                    if (typeArray[0] !== \"bounce\") {\r\n                        curvedTime = this.easingFormulas[tweenProperties.type as string](normalizedTime);\r\n\r\n                    } else {\r\n                        // If it's a spline, use the `spline` function and apply the\r\n                        // 2 additional `type` array values as the spline's start and\r\n                        // end points\r\n\r\n                        curvedTime = this.easingFormulas.spline(normalizedTime, o.startMagnitude, 0, 1, o.endMagnitude);\r\n                    }\r\n\r\n                    // Interpolate the sprite's property based on the curve\r\n                    (tweenProperties.displayObject as any)[tweenProperties.property] = (o.endValue * curvedTime) + (o.startValue * (1 - curvedTime));\r\n\r\n                    o.frameCounter += 1;\r\n\r\n                } else {\r\n                    // When the tween has finished playing, run the end tasks\r\n\r\n                    (tweenProperties.displayObject as any)[tweenProperties.property] = o.endValue;\r\n                    o.end();\r\n                }\r\n            }\r\n        };\r\n\r\n        // The `end` method will be called when the tween is finished\r\n        o.end = () => {\r\n\r\n            // Set `playing` to `false`\r\n            o.playing = false;\r\n\r\n            // Call the tween's `onComplete` method, if it's been assigned\r\n            if (o.onCompleted) { o.onCompleted(); }\r\n\r\n            // Remove the tween from the `tweens` array\r\n            this.globalTweens.splice(this.globalTweens.indexOf(o), 1);\r\n\r\n            // If the tween's `yoyo` property is `true`, create a new tween\r\n            // using the same values, but use the current tween's `startValue`\r\n            // as the next tween's `endValue`\r\n            if (tweenProperties.yoyo) {\r\n                this.wait(tweenProperties.delayBeforeRepeat).then(() => {\r\n                    o.start(o.endValue, o.startValue);\r\n                });\r\n            }\r\n        };\r\n\r\n        // Pause and play methods\r\n        o.play = () => o.playing = true;\r\n        o.pause = () => o.playing = false;\r\n\r\n        // Return the tween object\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * `makeTween` is a general low-level method for making complex tweens\r\n     * out of multiple `tweenProperty` functions. Its one argument.\r\n     * @param tweensToAdd array containing multiple 'Charm.Tween.ITween' for 'tweenProperty' calls\r\n     * @return Tween collection created\r\n     */\r\n    public makeTween(tweensToAdd: ICharm.Tween.ITweenProperty[]): ICharm.Tween.ITweenCollection {\r\n\r\n\r\n        // Create an object to manage the tweens\r\n        let o: ICharm.Tween.ITweenCollection = {} as ICharm.Tween.ITweenCollection;\r\n\r\n        // Create a `tweens` array to store the new tweens\r\n        o.tweens = [];\r\n\r\n        // Make a new tween for each array\r\n        tweensToAdd.forEach((tweenPropertyArguments: ICharm.Tween.ITweenProperty) => {\r\n\r\n            // Use the tween property arguments to make a new tween\r\n            let newTween: ICharm.Tween.ITween = this.tweenProperty(tweenPropertyArguments);\r\n\r\n            // Push the new tween into this object's internal `tweens` array\r\n            o.tweens.push(newTween);\r\n        });\r\n\r\n        // Add a counter to keep track of the\r\n        // number of tweens that have completed their actions\r\n        let completionCounter: number = 0;\r\n\r\n        // Add `onComplete` methods to all tweens\r\n        o.tweens.forEach((tween: ICharm.Tween.ITween) => {\r\n            tween.onCompleted = () => {\r\n\r\n                // Add 1 to the `completionCounter`\r\n                completionCounter += 1;\r\n\r\n                // If all tweens have finished, call the user-defined `onComplete`\r\n                // method, if it's been assigned. Reset the `completionCounter`\r\n                if (completionCounter === o.tweens.length) {\r\n                    if (o.onCompleted) { o.onCompleted(); }\r\n                    completionCounter = 0;\r\n                }\r\n            };\r\n        });\r\n\r\n        // Add pause and play methods to control all the tweens\r\n        o.pause = () => {\r\n            o.tweens.forEach((tween: ICharm.Tween.ITween) => {\r\n                tween.playing = false;\r\n            });\r\n        };\r\n        o.play = () => {\r\n            o.tweens.forEach((tween: ICharm.Tween.ITween) => {\r\n                tween.playing = true;\r\n            });\r\n        };\r\n\r\n        // Return the tween object\r\n        return o;\r\n    }\r\n\r\n    /* High level tween methods */\r\n\r\n    /** SIMPLE TWEENS */\r\n\r\n    /**\r\n     * `fadeOut`\r\n     * @param displayObject\r\n     * @param frames (default 60)\r\n     * @return\r\n     */\r\n    public fadeOut(displayObject: PIXI.DisplayObject, frames: number = 60): ICharm.Tween.ITween {\r\n        return this.tweenProperty({\r\n            displayObject: displayObject,\r\n            endValue: 0,\r\n            property: \"alpha\",\r\n            startValue: displayObject.alpha,\r\n            totalFrames: frames,\r\n            type: \"sine\"\r\n        });\r\n    }\r\n\r\n    /**\r\n     * `fadeIn`\r\n     * @param displayObject\r\n     * @param frames (default 60)\r\n     * @return\r\n     */\r\n    public fadeIn(displayObject: PIXI.DisplayObject, frames: number = 60): ICharm.Tween.ITween {\r\n        return this.tweenProperty({\r\n            displayObject: displayObject,\r\n            endValue: 1,\r\n            property: \"alpha\",\r\n            startValue: displayObject.alpha,\r\n            totalFrames: frames,\r\n            type: \"sine\"\r\n        });\r\n    }\r\n\r\n    /**\r\n     * `pulse`\r\n     * Fades the displayObject in and out at a steady rate.\r\n     * Set the `minAlpha` to something greater than 0 if you\r\n     * don't want the displayObject to fade away completely\r\n     * @param displayObject\r\n     * @param frames (default 60)\r\n     * @param minAlpha (default 0)\r\n     * @return\r\n     */\r\n    public pulse(displayObject: PIXI.DisplayObject, frames: number = 60, minAlpha: number = 0): ICharm.Tween.ITween {\r\n        return this.tweenProperty({\r\n            displayObject: displayObject,\r\n            endValue: minAlpha,\r\n            property: \"alpha\",\r\n            startValue: displayObject.alpha,\r\n            totalFrames: frames,\r\n            type: \"smoothstep\",\r\n            yoyo: true\r\n        });\r\n    }\r\n\r\n    /** COMPLEX TWEENS */\r\n\r\n    /**\r\n     * Complex tweens\r\n     * @param displayObject\r\n     * @param endX\r\n     * @param endY\r\n     * @param frames (default 60)\r\n     * @param type (default smoothstep)\r\n     * @param yoyo (default false)\r\n     * @param delayBeforeRepeat (default 0)\r\n     * @return\r\n     */\r\n    public slide(displayObject: PIXI.DisplayObject, endX: number, endY: number, frames: number = 60, type: string = \"smoothstep\", yoyo: boolean = false,\r\n                 delayBeforeRepeat: number = 0): ICharm.Tween.ITweenCollection {\r\n        return this.makeTween([\r\n            // Create the x axis tween\r\n            {\r\n                delayBeforeRepeat: delayBeforeRepeat,\r\n                displayObject: displayObject,\r\n                endValue: endX,\r\n                property: \"x\",\r\n                startValue: displayObject.x,\r\n                totalFrames: frames,\r\n                type: type,\r\n                yoyo: yoyo\r\n            },\r\n\r\n            // Create the y axis tween\r\n            {\r\n                delayBeforeRepeat: delayBeforeRepeat,\r\n                displayObject: displayObject,\r\n                endValue: endY,\r\n                property: \"y\",\r\n                startValue: displayObject.y,\r\n                totalFrames: frames,\r\n                type: type,\r\n                yoyo: yoyo\r\n            }\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param endScaleX (default 0.8)\r\n     * @param endScaleY (default 0.8)\r\n     * @param frames (default 60)\r\n     * @param yoyo (default true)\r\n     * @param delayBeforeRepeat (default 0)\r\n     * @return\r\n     */\r\n    public breathe(displayObject: PIXI.DisplayObject, endScaleX: number = 0.8, endScaleY: number = 0.8, frames: number = 60, yoyo: boolean = true,\r\n                   delayBeforeRepeat: number = 0): ICharm.Tween.ITweenCollection {\r\n\r\n        // Add `scaleX` and `scaleY` properties to Pixi sprites\r\n        this._addScaleProperties(displayObject);\r\n\r\n        return this.makeTween([\r\n\r\n            // Create the scaleX tween\r\n            {\r\n                delayBeforeRepeat: delayBeforeRepeat,\r\n                displayObject: displayObject,\r\n                endValue: endScaleX,\r\n                property: \"scaleX\",\r\n                startValue: displayObject.scale.x,\r\n                totalFrames: frames,\r\n                type: \"smoothstepSquared\",\r\n                yoyo: yoyo\r\n            },\r\n\r\n            // Create the scaleY tween\r\n            {\r\n                delayBeforeRepeat: delayBeforeRepeat,\r\n                displayObject: displayObject,\r\n                endValue: endScaleY,\r\n                property: \"scaleY\",\r\n                startValue: displayObject.scale.y,\r\n                totalFrames: frames,\r\n                type: \"smoothstepSquared\",\r\n                yoyo: yoyo\r\n            }\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param endScaleX (default 0.5)\r\n     * @param endScaleY (default 0.5)\r\n     * @param frames (default 60)\r\n     * @return\r\n     */\r\n    public scale(displayObject: PIXI.DisplayObject, endScaleX: number = 0.5, endScaleY: number = 0.5, frames: number = 60): ICharm.Tween.ITweenCollection {\r\n\r\n        // Add `scaleX` and `scaleY` properties to Pixi sprites\r\n        this._addScaleProperties(displayObject);\r\n\r\n        return this.makeTween([\r\n\r\n            // Create the scaleX tween\r\n            {\r\n                displayObject: displayObject,\r\n                endValue: endScaleX,\r\n                property: \"scaleX\",\r\n                startValue: displayObject.scale.x,\r\n                totalFrames: frames,\r\n                type: \"smoothstep\",\r\n                yoyo: false\r\n            },\r\n            // Create the scaleY tween\r\n            {\r\n                displayObject: displayObject,\r\n                endValue: endScaleY,\r\n                property: \"scaleY\",\r\n                startValue: displayObject.scale.y,\r\n                totalFrames: frames,\r\n                type: \"smoothstep\",\r\n                yoyo: false\r\n            }\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param scaleFactor (default 1.3)\r\n     * @param startMagnitude (default 10)\r\n     * @param endMagnitude (default 20)\r\n     * @param frames (default 10)\r\n     * @param yoyo (default true)\r\n     * @param delayBeforeRepeat (default 0)\r\n     * @return\r\n     */\r\n    public strobe(displayObject: PIXI.DisplayObject, scaleFactor: number = 1.3, startMagnitude: number = 10, endMagnitude: number = 20,\r\n                  frames: number = 10, yoyo: boolean = true, delayBeforeRepeat: number = 0): ICharm.Tween.ITweenCollection {\r\n\r\n        let bounce: string = \"bounce \" + startMagnitude + \" \" + endMagnitude;\r\n\r\n        // Add `scaleX` and `scaleY` properties to Pixi sprites\r\n        this._addScaleProperties(displayObject);\r\n\r\n        return this.makeTween([\r\n\r\n            // Create the scaleX tween\r\n            {\r\n                delayBeforeRepeat: delayBeforeRepeat,\r\n                displayObject: displayObject,\r\n                endValue: scaleFactor,\r\n                property: \"scaleX\",\r\n                startValue: displayObject.scale.x,\r\n                totalFrames: frames,\r\n                type: bounce,\r\n                yoyo: false\r\n            },\r\n\r\n            // Create the scaleY tween\r\n            {\r\n                delayBeforeRepeat: delayBeforeRepeat,\r\n                displayObject: displayObject,\r\n                endValue: scaleFactor,\r\n                property: \"scaleY\",\r\n                startValue: displayObject.scale.y,\r\n                totalFrames: frames,\r\n                type: bounce,\r\n                yoyo: yoyo\r\n            }\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param scaleFactorX (default 1.2)\r\n     * @param scaleFactorY (default 1.2)\r\n     * @param frames (default 10)\r\n     * @param xStartMagnitude (default 10)\r\n     * @param xEndMagnitude (default 10)\r\n     * @param yStartMagnitude (default -10)\r\n     * @param yEndMagnitude (default -10)\r\n     * @param friction (default 0.98)\r\n     * @param yoyo (default true)\r\n     * @param delayBeforeRepeat (default 0)\r\n     * @return\r\n     */\r\n    public wobble(displayObject: PIXI.DisplayObject, scaleFactorX: number = 1.2, scaleFactorY: number = 1.2, frames: number = 10, xStartMagnitude: number = 10,\r\n                  xEndMagnitude: number = 10, yStartMagnitude: number = -10, yEndMagnitude: number = -10, friction: number = 0.98, yoyo: boolean = true,\r\n                  delayBeforeRepeat: number = 0): ICharm.Tween.ITweenCollection {\r\n\r\n        let bounceX: string = \"bounce \" + xStartMagnitude + \" \" + xEndMagnitude;\r\n        let bounceY: string = \"bounce \" + yStartMagnitude + \" \" + yEndMagnitude;\r\n\r\n        // Add `scaleX` and `scaleY` properties to Pixi sprites\r\n        this._addScaleProperties(displayObject);\r\n\r\n        let o: ICharm.Tween.ITweenCollection = this.makeTween([\r\n\r\n            // Create the scaleX tween\r\n            {\r\n                delayBeforeRepeat: delayBeforeRepeat,\r\n                displayObject: displayObject,\r\n                endValue: scaleFactorX,\r\n                property: \"scaleX\",\r\n                startValue: displayObject.scale.x,\r\n                totalFrames: frames,\r\n                type: bounceX,\r\n                yoyo: yoyo\r\n            },\r\n\r\n            // Create the scaleY tween\r\n            {\r\n                delayBeforeRepeat: delayBeforeRepeat,\r\n                displayObject: displayObject,\r\n                endValue: scaleFactorY,\r\n                property: \"scaleY\",\r\n                startValue: displayObject.scale.y,\r\n                totalFrames: frames,\r\n                type: bounceY,\r\n                yoyo: yoyo\r\n            }\r\n        ]);\r\n\r\n        // Add some friction to the `endValue` at the end of each tween\r\n        o.tweens.forEach((tween: ICharm.Tween.ITween) => {\r\n            tween.onCompleted = () => {\r\n\r\n                // Add friction if the `endValue` is greater than 1\r\n                if (tween.endValue > 1) {\r\n                    tween.endValue *= friction;\r\n\r\n                    // Set the `endValue` to 1 when the effect is finished and\r\n                    // remove the tween from the global `tweens` array\r\n                    if (tween.endValue <= 1) {\r\n                        tween.endValue = 1;\r\n                        this.removeTween(tween);\r\n                    }\r\n                }\r\n            };\r\n        });\r\n\r\n        return o;\r\n    }\r\n\r\n    // 3. Motion path tweens\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param pointsArray Bezier curve as a 2D array of 4 x/y points\r\n     * @param totalFrames\r\n     * @param type (default 'smoothstep')\r\n     * @param yoyo (default false)\r\n     * @param delayBeforeRepeat (default 0)\r\n     * @return\r\n     */\r\n    public followCurve(displayObject: PIXI.DisplayObject, pointsArray: number[][], totalFrames: number, type: string = \"smoothstep\",\r\n                       yoyo: boolean = false, delayBeforeRepeat: number = 0): ICharm.Tween.ITween {\r\n\r\n        // Create the tween object\r\n        let o: ICharm.Tween.ITween = {} as ICharm.Tween.ITween;\r\n\r\n        // If the tween is a bounce type (a spline), set the\r\n        // start and end magnitude values\r\n        let typeArray: string[] = type.split(\" \");\r\n        if (typeArray[0] === \"bounce\") {\r\n            o.startMagnitude = parseInt(typeArray[1], 10);\r\n            o.endMagnitude = parseInt(typeArray[2], 10);\r\n        }\r\n\r\n        // Use `tween.start` to make a new tween using the current\r\n        // end point values\r\n        o.start = (_pointsArray: number[][]) => {\r\n            o.playing = true;\r\n            o.totalFrames = totalFrames;\r\n            o.frameCounter = 0;\r\n\r\n            // Clone the points array\r\n            o.pointsArray = JSON.parse(JSON.stringify(_pointsArray));\r\n\r\n            // Add the tween to the `globalTweens` array. The `globalTweens` array is\r\n            // updated on each frame\r\n            this.globalTweens.push(o);\r\n        };\r\n\r\n        // Call `tween.start` to start the first tween\r\n        o.start(pointsArray);\r\n\r\n        // The `update` method will be called on each frame by the game loop.\r\n        // This is what makes the tween move\r\n        o.update = () => {\r\n\r\n            let normalizedTime: number, curvedTime: number, p: number[][] = o.pointsArray;\r\n\r\n            if (o.playing) {\r\n\r\n                // If the elapsed frames are less than the total frames,\r\n                // use the tweening formulas to move the sprite\r\n                if (o.frameCounter < o.totalFrames) {\r\n\r\n                    // Find the normalized value\r\n                    normalizedTime = o.frameCounter / o.totalFrames;\r\n\r\n                    // Select the correct easing function\r\n\r\n                    // If it's not a spline, use one of the ordinary tween\r\n                    // functions\r\n                    if (typeArray[0] !== \"bounce\") {\r\n                        curvedTime = this.easingFormulas[type](normalizedTime);\r\n                    } else {\r\n                        // If it's a spline, use the `spline` function and apply the\r\n                        // 2 additional `type` array values as the spline's start and\r\n                        // end points\r\n\r\n                        // curve = tweenFunction.spline(n, type[1], 0, 1, type[2]);\r\n                        curvedTime = this.easingFormulas.spline(normalizedTime, o.startMagnitude, 0, 1, o.endMagnitude);\r\n                    }\r\n\r\n                    // Apply the Bezier curve to the sprite's position\r\n                    displayObject.x = this.easingFormulas.cubicBezier(curvedTime, p[0][0], p[1][0], p[2][0], p[3][0]);\r\n                    displayObject.y = this.easingFormulas.cubicBezier(curvedTime, p[0][1], p[1][1], p[2][1], p[3][1]);\r\n\r\n                    // Add one to the `elapsedFrames`\r\n                    o.frameCounter += 1;\r\n                } else {\r\n                    // When the tween has finished playing, run the end tasks\r\n                    // displayObject[property] = o.endValue;\r\n                    o.end();\r\n                }\r\n            }\r\n        };\r\n\r\n        // The `end` method will be called when the tween is finished\r\n        o.end = () => {\r\n\r\n            // Set `playing` to `false`\r\n            o.playing = false;\r\n\r\n            // Call the tween's `onComplete` method, if it's been\r\n            // assigned\r\n            if (o.onCompleted) { o.onCompleted(); }\r\n\r\n            // Remove the tween from the global `tweens` array\r\n            this.globalTweens.splice(this.globalTweens.indexOf(o), 1);\r\n\r\n            // If the tween's `yoyo` property is `true`, reverse the array and\r\n            // use it to create a new tween\r\n            if (yoyo) {\r\n                this.wait(delayBeforeRepeat).then(() => {\r\n                    o.pointsArray = o.pointsArray.reverse();\r\n                    o.start(o.pointsArray);\r\n                });\r\n            }\r\n        };\r\n\r\n        // Pause and play methods\r\n        o.pause = () => {\r\n            o.playing = false;\r\n        };\r\n        o.play = () => {\r\n            o.playing = true;\r\n        };\r\n\r\n        // Return the tween object\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param originalPath Array of 2D array of x/y position waypoints that map out the path you want to follow.\r\n     * @param totalFrames The duration, in frames (default 300)\r\n     * @param type The easing type (default 'smoothstep')\r\n     * @param loop Should the animation loop? (default false)\r\n     * @param yoyo Shoud the direction reverse? (default false)\r\n     * @param delayBetweenSections Delay, in milliseconds, between sections (default 0)\r\n     * @return\r\n     */\r\n    public walkPath(displayObject: PIXI.DisplayObject, originalPathArray: number[][], totalFrames: number = 300, type: string = \"smoothstep\",\r\n                    loop: boolean = false, yoyo: boolean = false, delayBetweenSections: number = 0): ICharm.Tween.ITweenCollection {\r\n\r\n        // Clone the path array so that any possible references to sprite\r\n        // properties are converted into ordinary numbers\r\n        let pathArray: any = JSON.parse(JSON.stringify(originalPathArray));\r\n\r\n        // Figure out the duration, in frames, of each path section by\r\n        // dividing the `totalFrames` by the length of the `pathArray`\r\n        let frames: number = totalFrames / pathArray.length;\r\n\r\n        // Set the current point to 0, which will be the first waypoint\r\n        let currentPoint: number = 0;\r\n\r\n        // The `makePath` function creates a single tween between two points and\r\n        // then schedules the next path to be made after it\r\n        let makePath: Function = (_currentPoint: number): ICharm.Tween.ITweenCollection => {\r\n\r\n            // Use the `makeTween` function to tween the sprite's\r\n            // x and y position\r\n            let tweenCollection: ICharm.Tween.ITweenCollection = this.makeTween([\r\n\r\n                // Create the x axis tween between the first x value in the\r\n                // current point and the x value in the following point\r\n                {\r\n                    displayObject: displayObject,\r\n                    endValue: pathArray[currentPoint + 1][0],\r\n                    property: \"x\",\r\n                    startValue: pathArray[currentPoint][0],\r\n                    totalFrames: frames,\r\n                    type: type\r\n                },\r\n\r\n                // Create the y axis tween in the same way\r\n                {\r\n                    displayObject: displayObject,\r\n                    endValue: pathArray[currentPoint + 1][1],\r\n                    property: \"y\",\r\n                    startValue: pathArray[currentPoint][1],\r\n                    totalFrames: frames,\r\n                    type: type\r\n                }\r\n            ]);\r\n\r\n            // When the tween is complete, advance the `currentPoint` by one.\r\n            // Add an optional delay between path segments, and then make the\r\n            // next connecting path\r\n            tweenCollection.onCompleted = () => {\r\n\r\n                // Advance to the next point\r\n                currentPoint += 1;\r\n\r\n                // If the sprite hasn't reached the end of the\r\n                // path, tween the sprite to the next point\r\n                if (currentPoint < pathArray.length - 1) {\r\n                    this.wait(delayBetweenSections).then(() => {\r\n                        tweenCollection = makePath(currentPoint);\r\n                    });\r\n\r\n                } else {\r\n                    // If we've reached the end of the path, optionally\r\n                    // loop and yoyo it\r\n\r\n\r\n                    // Reverse the path if `loop` is `true`\r\n                    if (loop) {\r\n\r\n                        // Reverse the array if `yoyo` is `true`\r\n                        if (yoyo) { pathArray.reverse(); }\r\n\r\n                        // Optionally wait before restarting\r\n                        this.wait(delayBetweenSections).then(() => {\r\n\r\n                            // Reset the `currentPoint` to 0 so that we can\r\n                            // restart at the first point\r\n                            currentPoint = 0;\r\n\r\n                            // Set the sprite to the first point\r\n                            displayObject.x = pathArray[0][0];\r\n                            displayObject.y = pathArray[0][1];\r\n\r\n                            // Make the first new path\r\n                            tweenCollection = makePath(currentPoint);\r\n\r\n                            // ... and so it continues!\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n\r\n            // Return the path tween to the main function\r\n            return tweenCollection;\r\n        };\r\n\r\n        // Make the first path using the internal `makePath` function (below)\r\n        let tweenResult: ICharm.Tween.ITweenCollection = makePath(currentPoint);\r\n\r\n        // Pass the tween back to the main program\r\n        return tweenResult;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param displayObject\r\n     * @param curvedWaypoints 2D array of Bezier curves (Bezier curves is a 2D array of 4 x/y points)\r\n     * @param totalFrames (default 300)\r\n     * @param type (default 'smoothstep')\r\n     * @param loop (default false)\r\n     * @param yoyo (default false)\r\n     * @param delayBeforeContinue (default 0)\r\n     * @return\r\n     */\r\n    public walkCurve(displayObject: PIXI.DisplayObject, curvedWaypoints: number[][][], totalFrames: number = 300, type: string = \"smoothstep\",\r\n                     loop: boolean = false, yoyo: boolean = false, delayBeforeContinue: number = 0): ICharm.Tween.ITween {\r\n\r\n        // Divide the `totalFrames` into sections for each part of the path\r\n        let frames: number = totalFrames / curvedWaypoints.length;\r\n\r\n        // Set the current curve to 0, which will be the first one\r\n        let currentCurve: number = 0;\r\n\r\n        // The `makePath` function\r\n        let makePath: Function = (_currentCurve: number) => {\r\n\r\n            // Use the custom `followCurve` function to make\r\n            // a sprite follow a curve\r\n            let tween: ICharm.Tween.ITween = this.followCurve(\r\n                displayObject,\r\n                curvedWaypoints[currentCurve],\r\n                frames,\r\n                type\r\n            );\r\n\r\n            // When the tween is complete, advance the `currentCurve` by one.\r\n            // Add an optional delay between path segments, and then make the\r\n            // next path\r\n            tween.onCompleted = () => {\r\n                currentCurve += 1;\r\n                if (currentCurve < curvedWaypoints.length) {\r\n                    this.wait(delayBeforeContinue).then(() => {\r\n                        tween = makePath(currentCurve);\r\n                    });\r\n\r\n                } else {\r\n                    // If we've reached the end of the path, optionally\r\n                    // loop and reverse it\r\n\r\n                    if (loop) {\r\n                        if (yoyo) {\r\n\r\n                            // Reverse order of the curves in the `pathArray`\r\n                            curvedWaypoints.reverse();\r\n\r\n                            // Reverse the order of the points in each curve\r\n                            curvedWaypoints.forEach((curveArray: number[][]) => curveArray.reverse());\r\n                        }\r\n\r\n                        // After an optional delay, reset the sprite to the\r\n                        // beginning of the path and make the next new path\r\n                        this.wait(delayBeforeContinue).then(() => {\r\n                            currentCurve = 0;\r\n                            displayObject.x = curvedWaypoints[0][0][0];\r\n                            displayObject.y = curvedWaypoints[0][0][1];\r\n                            tween = makePath(currentCurve);\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n\r\n            // Return the path tween to the main function\r\n            return tween;\r\n        };\r\n\r\n        // Make the first path\r\n        let tweenResult: ICharm.Tween.ITween = makePath(currentCurve);\r\n\r\n        // Pass the tween back to the main program\r\n        return tweenResult;\r\n    }\r\n\r\n    // 4. Utilities\r\n\r\n    /**\r\n     * The `wait` method lets you set up a timed sequence of events\r\n     *\r\n     *   wait(1000)\r\n     *     .then(() => console.log(\"One\"))\r\n     *     .then(() => wait(1000))\r\n     *     .then(() => console.log(\"Two\"))\r\n     *     .then(() => wait(1000))\r\n     *     .then(() => console.log(\"Three\"))\r\n     * @param duration\r\n     * @return\r\n     */\r\n    public wait(duration: number = 0): any {\r\n        return new Promise((resolve: any, _reject: any) => {\r\n            setTimeout(resolve, duration);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A utility to remove tweens from globalTweens\r\n     * @param tweenObject\r\n     */\r\n    public removeTween(tweenObject: ICharm.Tween.ITween | ICharm.Tween.ITweenCollection): void {\r\n\r\n        // Remove the tween if `tweenObject` doesn't have any nested\r\n        // tween objects\r\n        if (!(tweenObject as any).tweens) {\r\n            tweenObject.pause();\r\n\r\n            // array.splice(-1,1) will always remove last elemnt of array, so this\r\n            // extra check prevents that (Thank you, MCumic10! https:// github.com/kittykatattack/charm/issues/5)\r\n            if (this.globalTweens.indexOf(tweenObject as ICharm.Tween.ITween) !== -1) {\r\n                this.globalTweens.splice(this.globalTweens.indexOf(tweenObject as ICharm.Tween.ITween), 1);\r\n            }\r\n\r\n            // Otherwise, remove the nested tween objects\r\n        } else {\r\n            tweenObject.pause();\r\n            (tweenObject as ICharm.Tween.ITweenCollection).tweens.forEach((element: ICharm.Tween.ITween) => {\r\n                this.globalTweens.splice(this.globalTweens.indexOf(element), 1);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Update all the tween objects in the `globalTweens` array\r\n     */\r\n    public update(): void {\r\n\r\n        // Update all the tween objects in the `globalTweens` array\r\n        if (this.globalTweens.length > 0) {\r\n            for (let i: number = this.globalTweens.length - 1; i >= 0; i--) {\r\n                let tween: ICharm.Tween.ITween = this.globalTweens[i];\r\n                if (tween) { tween.update(); }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Add `scaleX` and `scaleY` properties to Pixi sprites\r\n    private _addScaleProperties(displayObject: PIXI.DisplayObject): void {\r\n\r\n        if (this.renderer === \"pixi\") {\r\n            if (!(\"scaleX\" in displayObject) && (\"scale\" in displayObject) && (\"x\" in displayObject.scale)) {\r\n                Object.defineProperty(\r\n                    displayObject,\r\n                    \"scaleX\", {\r\n                        get(): number {\r\n                            return displayObject.scale.x;\r\n                        },\r\n                        set(value: number): void {\r\n                            displayObject.scale.x = value;\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (!(\"scaleY\" in displayObject) && (\"scale\" in displayObject) && (\"y\" in displayObject.scale)) {\r\n                Object.defineProperty(\r\n                    displayObject,\r\n                    \"scaleY\", {\r\n                        get(): number {\r\n                            return displayObject.scale.y;\r\n                        },\r\n                        set(value: number): void {\r\n                            displayObject.scale.y = value;\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pixijs-charm.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pixi.js\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"es6-shim\"\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}